{"version":3,"sources":["assets/images/about.jpg","assets/images/logo.png","app/home/home.js","app/aboutme/aboutme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","switchText","slidingText","document","getElementById","state","textIndex","textArray","length","setState","classList","add","remove","setTimeout","textToShow","querySelector","this","textTimer","setInterval","clearInterval","className","id","React","Component","AboutMe","Container","Row","Col","src","aboutImg","App","Navbar","bg","collapseOnSelect","expand","variant","fixed","Brand","to","logo","width","height","alt","Toggle","aria-controls","Collapse","Nav","Link","href","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,6KCqE5BC,G,wDAjEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAwBRC,WAAa,WACX,IAAIC,EAAcC,SAASC,eAAe,gBAEtC,EAAKC,MAAMC,WAAa,EAAKD,MAAME,UAAUC,OAAS,EACxD,EAAKC,SAAS,CACZH,UAAW,IAGb,EAAKG,SAAS,CACZH,UAAW,EAAKD,MAAMC,UAAY,IAItCJ,EAAYQ,UAAUC,IAAI,YAC1BT,EAAYQ,UAAUE,OAAO,WAG7BC,YAAW,WACT,EAAKJ,SAAS,CACZK,WAAY,EAAKT,MAAME,UAAU,EAAKF,MAAMC,aAE9CJ,EAAYQ,UAAUC,IAAI,WAC1BT,EAAYQ,UAAUE,OAAO,cAC5B,MA7CH,EAAKP,MAAQ,CACXE,UAAW,CACT,YACA,WACA,mBACA,8BAEFO,WAAY,6BACZR,UAAW,GAXI,E,gEAgBjBH,SAASY,cAAc,QAAQL,UAAUC,IAAI,aAC7CK,KAAKC,UAAYC,YAAYF,KAAKf,WAAY,O,6CAI9CE,SAASY,cAAc,QAAQL,UAAUE,OAAO,aAChDO,cAAcH,KAAKC,a,+BA8BnB,OACE,yBAAKG,UAAU,8BACb,yBAAKA,UAAU,oBACb,2CACA,wBAAIC,GAAG,eAAeD,UAAU,WAC7BJ,KAAKX,MAAMS,kB,GA1DLQ,IAAMC,Y,yCC0CVC,EArCC,WACd,OACE,yBAAKJ,UAAU,kBACb,yBAAKA,UAAU,mBACb,kBAACK,EAAA,EAAD,KACE,0CAGJ,6BACE,kBAACA,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKN,UAAU,eACb,kBAACO,EAAA,EAAD,KACE,yBAAKP,UAAU,YAAYQ,IAAKC,OAElC,kBAACF,EAAA,EAAD,KACE,yBAAKP,UAAU,cACb,0DACA,4hB,iDCuCDU,MA9Cf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKV,UAAU,YACb,kBAACW,EAAA,EAAD,CACEC,GAAG,cACHC,kBAAgB,EAChBC,OAAO,KACPC,QAAQ,OACRf,UAAU,aACVgB,MAAM,OACN,kBAACL,EAAA,EAAOM,MAAR,KACE,kBAAC,IAAD,CAAMC,GAAG,KACP,yBACEV,IAAKW,IACLC,MAAM,KACNC,OAAO,KACPrB,UAAU,2BACVsB,IAAI,2BAIV,kBAACX,EAAA,EAAOY,OAAR,CAAeC,gBAAc,0BAC7B,kBAACb,EAAA,EAAOc,SAAR,CAAiBxB,GAAG,yBAClB,kBAACyB,EAAA,EAAD,CAAK1B,UAAU,WACb,kBAAC,IAAD,CAAMkB,GAAG,YAAYlB,UAAU,YAA/B,YAGA,kBAAC0B,EAAA,EAAIC,KAAL,CAAUC,KAAK,aAAf,YACA,kBAACF,EAAA,EAAIC,KAAL,CAAUC,KAAK,SAAf,WAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,WC5CQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtD,SAASC,eAAe,SDsHpB,kBAAmBsD,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.21833fa0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.8e551662.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fafddba4.png\";","import React from \"react\";\r\nimport \"../../assets/css/style.css\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      textArray: [\r\n        \"Developer\",\r\n        \"Marketer\",\r\n        \"Graphic Designer\",\r\n        \"Lets Build Something Great\",\r\n      ],\r\n      textToShow: \"Lets Build Something Great\",\r\n      textIndex: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.querySelector(\"html\").classList.add(\"home-page\");\r\n    this.textTimer = setInterval(this.switchText, 8000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.querySelector(\"html\").classList.remove(\"home-page\");\r\n    clearInterval(this.textTimer);\r\n  }\r\n  // this code animates the text at the bottom of the main title\r\n  switchText = () => {\r\n    var slidingText = document.getElementById(\"sliding-text\");\r\n    // keep track of the index\r\n    if (this.state.textIndex >= this.state.textArray.length - 1) {\r\n      this.setState({\r\n        textIndex: 0,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        textIndex: this.state.textIndex + 1,\r\n      });\r\n    }\r\n    // Add class to make it disappear\r\n    slidingText.classList.add(\"fade-out\");\r\n    slidingText.classList.remove(\"fade-in\");\r\n\r\n    // Only change index when the\r\n    setTimeout(() => {\r\n      this.setState({\r\n        textToShow: this.state.textArray[this.state.textIndex],\r\n      });\r\n      slidingText.classList.add(\"fade-in\");\r\n      slidingText.classList.remove(\"fade-out\");\r\n    }, 2000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-slider fade-in-faster\">\r\n        <div className=\"home-slider-text\">\r\n          <h1>Chota Mpuku</h1>\r\n          <h3 id=\"sliding-text\" className=\"fade-in\">\r\n            {this.state.textToShow}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n// Bootstrap\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n// Assets\r\nimport aboutImg from \"../../assets/images/about.jpg\";\r\n\r\nconst AboutMe = () => {\r\n  return (\r\n    <div className=\"fade-in-faster\">\r\n      <div className=\"top-banner-area\">\r\n        <Container>\r\n          <h1>About Me</h1>\r\n        </Container>\r\n      </div>\r\n      <div>\r\n        <Container>\r\n          <Row className=\"row-spacing\">\r\n            <Col>\r\n              <img className=\"img-fluid\" src={aboutImg} />\r\n            </Col>\r\n            <Col>\r\n              <div className=\"intro-text\">\r\n                <h1>Lets Build Something Great</h1>\r\n                <p>\r\n                  You think water moves fast? You should see ice. It moves like\r\n                  it has a mind. Like it knows it killed the world once and got\r\n                  a taste for murder. After the avalanche, it took us a week to\r\n                  climb out. Now, I don't know exactly when we turned on each\r\n                  other, but I know that seven of us survived the slide... and\r\n                  only five made it out. Now we took an oath, that I'm breaking\r\n                  now. We said we'd say it was the snow that killed the other\r\n                  two, but it wasn't. Nature is lethal but it doesn't hold a\r\n                  candle to man.\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React from \"react\";\n\n// COmponents\nimport Home from \"./app/home/home\";\nimport AboutMe from \"./app/aboutme/aboutme\";\n\n// Bootstrap\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\n// Assets\nimport \"./assets/css/style.css\"; //CSS\nimport logo from \"./assets/images/logo.png\"; //Logo\n\n// React Router\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app-area\">\n        <Navbar\n          bg=\"transparent\"\n          collapseOnSelect\n          expand=\"lg\"\n          variant=\"dark\"\n          className=\"top-navbar\"\n          fixed=\"top\">\n          <Navbar.Brand>\n            <Link to=\"/\">\n              <img\n                src={logo}\n                width=\"50\"\n                height=\"50\"\n                className=\"d-inline-block align-top\"\n                alt=\"React Bootstrap logo\"\n              />\n            </Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Link to=\"/about-me\" className=\"nav-link\">\n                About Me\n              </Link>\n              <Nav.Link href=\"#projects\">Projects</Nav.Link>\n              <Nav.Link href=\"#blog\">Blog</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Switch>\n          <Route path=\"/about-me\">\n            <AboutMe />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}